name: CI

on:
  push:
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  tests:
    name: Python Check
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.11]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - id: cache-dependencies
        name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.venv
          key: ${{ matrix.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ matrix.os }}-
      - name: Install dependencies
        if: steps.cache-dependencies.cache-hit != 'true'
        run: |
          python -m pip install -U pip poetry
          poetry --version
          poetry check --no-interaction
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
      - name: Run linting
        run: |
          poetry run ruff check
      - name: Run tests
        run: |
          poetry run pytest -v
      - name: Build artifacts
        run: |
          poetry build --no-interaction
